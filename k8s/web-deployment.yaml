apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: web
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.service: web
    spec:
      containers:
      - args:
        - gunicorn
        - video_storage.wsgi:application
        - --bind
        - 0.0.0.0:8000
        - --log-level
        - DEBUG
        env:
        - name: CELERY_BROKER
          valueFrom:
            configMapKeyRef:
              key: CELERY_BROKER
              name: env
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: DB_HOST
              name: env
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              key: DB_PORT
              name: env
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              key: DEBUG
              name: env
        - name: DJANGO_ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              key: DJANGO_ALLOWED_HOSTS
              name: env
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: env
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: env
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: env
        - name: SECRET_KEY
          valueFrom:
            configMapKeyRef:
              key: SECRET_KEY
              name: env
        image: video_storage_web
        imagePullPolicy: "Never"
        name: web
        ports:
        - containerPort: 8000
        resources: {}
        volumeMounts:
        - mountPath: /usr/src/app/staticfiles
          name: static-volume
        - mountPath: /usr/src/app/mediafiles
          name: media-volume
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: static-volume
        persistentVolumeClaim:
          claimName: static-volume
      - name: media-volume
        persistentVolumeClaim:
          claimName: media-volume
status: {}
